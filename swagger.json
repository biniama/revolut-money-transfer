{
  "swagger":"2.0",
  "info":{
    "version":"1.0.0",
    "title":"API Documentation for Revolut Money Transfer"
  },
  "host":"localhost:8080",
  "basePath":"/api",
  "tags":[
    {
      "name":"transfer"
    }
  ],
  "schemes":[
    "http"
  ],
  "paths":{
    "/account":{
      "get":{
        "summary":"Retrieves all accounts registered until now",
        "description":"",
        "operationId":"getAllAccounts",
        "consumes":[
          "application/json"
        ],
        "produces":[
          "application/json"
        ],
        "parameters":[

        ],
        "responses":{
          "200":{
            "description":"successful operation",
            "schema":{
              "type":"array",
              "items":{
                "$ref":"#/definitions/Account"
              }
            }
          }
        }
      },
      "post":{
        "summary":"Create an account",
        "description":"",
        "operationId":"addAccount",
        "consumes":[
          "application/json"
        ],
        "produces":[
          "application/json"
        ],
        "parameters":[
          {
            "in":"body",
            "name":"body",
            "description":"Created account data",
            "required":true,
            "schema":{
              "$ref":"#/definitions/Account"
            }
          }
        ],
        "responses":{
          "200":{
            "description":"successful operation",
            "schema":{
              "$ref":"#/definitions/Account"
            }
          }
        }
      }
    },
    "/account/{accountId}":{
      "get":{
        "summary":"Retrieves account based on id",
        "description":"",
        "operationId":"getAccount",
        "consumes":[
          "application/json"
        ],
        "produces":[
          "application/json"
        ],
        "parameters":[
          {
            "name":"accountId",
            "in":"path",
            "description":"account id to retrieve",
            "required":true,
            "type":"integer",
            "format":"int64"
          }
        ],
        "responses":{
          "200":{
            "description":"successful operation",
            "schema":{
              "$ref":"#/definitions/Account"
            }
          },
          "400":{
            "description":"Invalid account ID supplied"
          }
        }
      },
      "put":{
        "summary":"Updates account",
        "description":"Given the id and the updated account data, this operation makes modifications to an existing object",
        "operationId":"updateAccount",
        "consumes":[
          "application/json"
        ],
        "produces":[
          "application/json"
        ],
        "parameters":[
          {
            "name":"accountId",
            "in":"path",
            "description":"account id that needs to be deleted",
            "required":true,
            "type":"integer",
            "format":"int64"
          },
          {
            "in":"body",
            "name":"body",
            "description":"Updated account object",
            "required":true,
            "schema":{
              "$ref":"#/definitions/Account"
            }
          }
        ],
        "responses":{
          "200":{
            "description":"successful operation",
            "schema":{
              "$ref":"#/definitions/Account"
            }
          },
          "400":{
            "description":"Invalid account supplied"
          },
          "404":{
            "description":"account not found"
          }
        }
      },
      "delete":{
        "summary":"Delete account",
        "description":"Given the id of the account data to delete, it removes it from the in-memory datastore",
        "operationId":"deleteAccount",
        "consumes":[
          "application/json"
        ],
        "produces":[
          "application/json"
        ],
        "parameters":[
          {
            "name":"accountId",
            "in":"path",
            "description":"account id that needs to be deleted",
            "required":true,
            "type":"integer",
            "format":"int64"
          }
        ],
        "responses":{
          "200":{
            "description":"successful operation",
            "schema":{
              "$ref":"#/definitions/Account"
            }
          },
          "400":{
            "description":"Invalid account supplied"
          },
          "404":{
            "description":"account not found"
          }
        }
      }
    },
    "/transfer":{
      "get":{
        "tags":[
          "transfer"
        ],
        "summary":"Retrieves all transfers registered until now",
        "description":"",
        "operationId":"getAllTransfers",
        "consumes":[
          "application/json"
        ],
        "produces":[
          "application/json"
        ],
        "parameters":[

        ],
        "responses":{
          "200":{
            "description":"successful operation",
            "schema":{
              "type":"array",
              "items":{
                "$ref":"#/definitions/Transfer"
              }
            }
          }
        }
      },
      "post":{
        "tags":[
          "transfer"
        ],
        "summary":"Create a money transfer operation",
        "description":"Requirements for successful money transfer:\n     *  1. Sender AND receiver accounts must not be null\n     *  2. Both sender and receiver cannot be the same account\n     *  3. The Senders account balance should be equal or greater than the transfer amount.\n     *  Otherwise, money transfer is not possible.",
        "operationId":"addTransfer",
        "consumes":[
          "application/json"
        ],
        "produces":[
          "application/json"
        ],
        "parameters":[
          {
            "in":"body",
            "name":"body",
            "description":"Created transfer DTO (data transfer object)",
            "required":true,
            "schema":{
              "$ref":"#/definitions/TransferDto"
            }
          }
        ],
        "responses":{
          "200":{
            "description":"successful operation",
            "schema":{
              "$ref":"#/definitions/Transfer"
            }
          }
        }
      }
    },
    "/transfer/{transferId}":{
      "get":{
        "tags":[
          "transfer"
        ],
        "summary":"Retrieves transfer based on id",
        "description":"",
        "operationId":"getTransfer",
        "consumes":[
          "application/json"
        ],
        "produces":[
          "application/json"
        ],
        "parameters":[
          {
            "name":"transferId",
            "in":"path",
            "description":"transfer id to retrieve",
            "required":true,
            "type":"integer",
            "format":"int64"
          }
        ],
        "responses":{
          "200":{
            "description":"successful operation",
            "schema":{
              "$ref":"#/definitions/Transfer"
            }
          },
          "400":{
            "description":"Invalid transfer ID supplied"
          }
        }
      },
      "put":{
        "tags":[
          "transfer"
        ],
        "summary":"Updates transfer",
        "description":"Given the id and the updated transfer data, this operation makes modifications to an existing object",
        "operationId":"updateTransfer",
        "consumes":[
          "application/json"
        ],
        "produces":[
          "application/json"
        ],
        "parameters":[
          {
            "name":"transferId",
            "in":"path",
            "description":"transfer id that needs to be deleted",
            "required":true,
            "type":"integer",
            "format":"int64"
          },
          {
            "in":"body",
            "name":"body",
            "description":"Updated transfer object",
            "required":true,
            "schema":{
              "$ref":"#/definitions/Transfer"
            }
          }
        ],
        "responses":{
          "200":{
            "description":"successful operation",
            "schema":{
              "$ref":"#/definitions/Transfer"
            }
          },
          "400":{
            "description":"Invalid transfer supplied"
          },
          "404":{
            "description":"transfer not found"
          }
        }
      },
      "delete":{
        "tags":[
          "transfer"
        ],
        "summary":"Delete transfer",
        "description":"Given the id of the transfer data to delete, it removes it from the in-memory datastore",
        "operationId":"deleteTransfer",
        "consumes":[
          "application/json"
        ],
        "produces":[
          "application/json"
        ],
        "parameters":[
          {
            "name":"transferId",
            "in":"path",
            "description":"transfer id that needs to be deleted",
            "required":true,
            "type":"integer",
            "format":"int64"
          }
        ],
        "responses":{
          "200":{
            "description":"successful operation",
            "schema":{
              "$ref":"#/definitions/Transfer"
            }
          },
          "400":{
            "description":"Invalid transfer supplied"
          },
          "404":{
            "description":"transfer not found"
          }
        }
      }
    }
  },
  "definitions":{
    "Account":{
      "type":"object",
      "properties":{
        "id":{
          "type":"integer",
          "format":"int64"
        },
        "firstName":{
          "type":"string"
        },
        "lastName":{
          "type":"string"
        },
        "phoneNumber":{
          "type":"string"
        },
        "balance":{
          "type":"number",
          "format":"double"
        }
      }
    },
    "Transfer":{
      "type":"object",
      "properties":{
        "id":{
          "type":"integer",
          "format":"int64"
        },
        "sender":{
          "$ref":"#/definitions/Account"
        },
        "receiver":{
          "$ref":"#/definitions/Account"
        },
        "amount":{
          "type":"number",
          "format":"double"
        },
        "date":{
          "type":"string",
          "format":"date-time"
        },
        "status":{
          "type":"string",
          "enum":[
            "PENDING",
            "PROCESSING",
            "SUCCESSFUL",
            "FAILED"
          ]
        }
      }
    },
    "TransferDto":{
      "type":"object",
      "properties":{
        "senderId":{
          "type":"integer",
          "format":"int64"
        },
        "receiverId":{
          "type":"integer",
          "format":"int64"
        },
        "amount":{
          "type":"number",
          "format":"double"
        },
        "date":{
          "type":"string",
          "format":"date-time"
        }
      }
    }
  }
}